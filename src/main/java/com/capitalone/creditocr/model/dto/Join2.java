package com.capitalone.creditocr.model.dto;

import java.util.Objects;

/**
 * A simple data class containing two joined database entities.
 */
@SuppressWarnings("FieldCanBeLocal") // Fields are generated by lombok
public class Join2<T, U> {

    private T left;
    private U right;

    private Join2(T left, U right) {
        this.left = left;
        this.right = right;
    }

    public static <T, U> Builder<T, U> builder() {
        return new Builder<>();
    }

    public T getLeft() {
        return left;
    }

    public void setLeft(T left) {
        this.left = left;
    }

    public U getRight() {
        return right;
    }

    public void setRight(U right) {
        this.right = right;
    }

    @Override
    public String toString() {
        return "Join2{" +
                "left=" + left +
                ", right=" + right +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Join2<?, ?> join2 = (Join2<?, ?>) o;
        return Objects.equals(getLeft(), join2.getLeft()) &&
                Objects.equals(getRight(), join2.getRight());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getLeft(), getRight());
    }

    public static class Builder<T, U> {
        private T left;
        private U right;

        public Builder left(T left) {
            this.left = left;
            return this;
        }

        public Builder right(U right) {
            this.right = right;
            return this;
        }

        public Join2<T, U> build() {
            return new Join2<>(left, right);
        }
    }
}
